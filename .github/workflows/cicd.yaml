name: CI/CD Daybook Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      # 3Ô∏è‚É£ SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=0x1Luffy_Daybook-DevOps
            -Dsonar.organization=0x1luffy

      # 4Ô∏è‚É£ Pre-build Trivy scan
      - name: Trivy FS Scan
        uses: aquasecurity/trivy-action@0.18.0
        with:
          scan-type: fs
          scan-ref: .
          severity: HIGH,CRITICAL
          format: table
          output: trivy-fs-report.txt

      # 5Ô∏è‚É£ Build backend Docker image
      - name: Build backend image
        run: docker build -t daybook-backend ./backend

      # 6Ô∏è‚É£ Build frontend Docker image
      - name: Build frontend image
        run: |
          docker build \
            --build-arg NGINX_CONF=nginx.conf \
            --build-arg VITE_BACKEND_URL=${{ secrets.PROD_API_URL }} \
            -t daybook-frontend ./frontend

      # 7Ô∏è‚É£ Trivy Scan (backend image)
      - name: Trivy Scan Backend
        uses: aquasecurity/trivy-action@0.18.0
        with:
          scan-type: image
          image-ref: daybook-backend
          severity: HIGH,CRITICAL
          format: table
          output: trivy-backend-report.txt

      # 8Ô∏è‚É£ Trivy Scan (frontend image)
      - name: Trivy Scan Frontend
        uses: aquasecurity/trivy-action@0.18.0
        with:
          scan-type: image
          image-ref: daybook-frontend
          severity: HIGH,CRITICAL
          format: table
          output: trivy-frontend-report.txt

      # 9Ô∏è‚É£ Upload Trivy Reports
      - name: Upload Trivy Reports
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: |
            trivy-fs-report.txt
            trivy-backend-report.txt
            trivy-frontend-report.txt

      # üîü Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 1Ô∏è‚É£1Ô∏è‚É£ Push backend image with commit SHA tag
      - name: Push backend image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker tag daybook-backend ${{ secrets.DOCKER_USERNAME }}/daybook-backend:$IMAGE_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/daybook-backend:$IMAGE_TAG

      # 1Ô∏è‚É£2Ô∏è‚É£ Push frontend image with commit SHA tag
      - name: Push frontend image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker tag daybook-frontend ${{ secrets.DOCKER_USERNAME }}/daybook-frontend:$IMAGE_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/daybook-frontend:$IMAGE_TAG

      # 1Ô∏è‚É£6Ô∏è‚É£ Deploy backend to Render with new tag (optional)
      # - name: Deploy backend to Render
      #   env:
      #     RENDER_HOOK: ${{ secrets.RENDER_BACKEND_HOOK }}
      #     IMG: docker.io/${{ secrets.DOCKER_USERNAME }}/daybook-backend:${{ github.sha }}
      #   run: |
      #     curl -fsSLG "$RENDER_HOOK" \
      #       --data-urlencode "imgURL=$IMG"

      # 1Ô∏è‚É£6Ô∏è‚É£ Deploy frontend to Render with new tag
      - name: Deploy frontend to Render
        env:
          RENDER_HOOK: ${{ secrets.RENDER_FRONTEND_HOOK }}
          IMG: docker.io/${{ secrets.DOCKER_USERNAME }}/daybook-frontend:${{ github.sha }}
        run: |
          curl -fsSLG "$RENDER_HOOK" \
          --data-urlencode "imgURL=$IMG"

      # 1Ô∏è‚É£3Ô∏è‚É£ Update K8s manifests with new image tags
      - name: Update Kubernetes Manifests
        run: |
          IMAGE_TAG=${{ github.sha }}
          sed -i "s|image: ./daybook-frontend.|image: ${{ secrets.DOCKER_USERNAME }}/daybook-frontend:$IMAGE_TAG|" ./K8s/frontend/deployment.yml
          sed -i "s|image: ./daybook-backend.|image: ${{ secrets.DOCKER_USERNAME }}/daybook-backend:$IMAGE_TAG|" ./K8s/backend/deployment.yml

      # 1Ô∏è‚É£4Ô∏è‚É£ Commit and push manifest changes
      - name: Commit manifest updates
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add ./K8s/frontend/deployment.yml ./K8s/backend/deployment.yml
          git commit -m "Update K8s manifests with image tag ${{ github.sha }}" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.DAYBOOK_GITHUB_TOKEN }}
